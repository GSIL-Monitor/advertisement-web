<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="agency">

	<resultMap id="agencyMap" type="Agency">
		<result property="id" column="id" jdbcType="NUMERIC" />
		<result property="userId" column="user_id" jdbcType="NUMERIC" />
		<result property="agencyName" column="agency_name" jdbcType="VARCHAR" />
		<result property="inviteUserId" column="invite_user_id" jdbcType="NUMERIC" />
		<result property="name" column="name" jdbcType="VARCHAR" />
		<result property="mobile" column="mobile" jdbcType="VARCHAR" />
		<result property="productId" column="product_id" jdbcType="NUMERIC" />
		<result property="productName" column="product_name" jdbcType="NUMERIC" />
		<result property="brokerage" column="brokerage" jdbcType="NUMERIC" />
		<result property="status" column="status" jdbcType="NUMERIC" />
		<result property="type" column="type" jdbcType="NUMERIC" />
		<result property="inviteTime" column="invite_time" jdbcType="TIMESTAMP" />
		<result property="createTime" column="create_time" jdbcType="TIMESTAMP" />
		<result property="updateTime" column="update_time" jdbcType="TIMESTAMP" />

	</resultMap>

<!--查询直推总佣金-->
	<select id="getAgencyBrokerage" parameterType="java.lang.Long" resultType="java.math.BigDecimal">
		select
		sum(brokerage) as brokerage from
		tb_agency
		where
			invite_user_id =#{inviteUserId}

	</select>

	<!-- 佣金 -->
	<select id="selectAgencyByIds" parameterType="List" resultType="java.math.BigDecimal">
		select
		sum(brokerage) as brokerage from
		tb_agency
		<where>
			invite_user_id in
			<foreach item="inviteUserId" collection="list" open="(" separator=","
					 close=")">
				#{inviteUserId}
			</foreach>
		</where>
		group by invite_user_id
	</select>

	<select id="getSumBrokerage" parameterType="List" resultType="java.math.BigDecimal">
		select
		sum(brokerage) from
		tb_agency
		<where>
			user_id in
			<foreach item="userId" collection="list" open="(" separator=","
					 close=")">
				#{userId}
			</foreach>
			and status = 1 
		</where>
	</select>
	
	<select id="settledTwoAgencyBrokerages" parameterType="List" resultType="java.math.BigDecimal">
		select
		sum(brokerage) from
		tb_agency
		<where>
			user_id in
			<foreach item="userId" collection="list" open="(" separator=","
					 close=")">
				#{userId}
			</foreach>
			and status = 1 and create_time&lt;='2018-12-10'
		</where>
	</select>
	
	<select id="settledBrokerageAndTimeCompare" parameterType="List" resultType="java.math.BigDecimal">
		select
		sum(brokerage) from
		tb_agency
		<where>
			user_id in
			<foreach item="userId" collection="list" open="(" separator=","
					 close=")">
				#{userId}
			</foreach>
			and status = 1 and create_time&gt;'2018-12-10'
		</where>
	</select>
	
	<select id="getVIPAgenctSumBrokerage" parameterType="java.lang.Long" resultType="java.math.BigDecimal" >
		select sum(brokerage)
		from tb_agency
		where
		invite_user_id=#{inviteUserId} and status = 1
	</select>

	<select id="selectAgencyById" parameterType="java.lang.Long" resultMap="agencyMap">
		select
		* from
		tb_agency
		<where>
			user_id=#{userId}
		</where>
	</select>

	<update id="updateAgency" parameterType="Agency">
		update tb_agency
		<set>
			<trim suffixOverrides=",">
				<if test="userId != null">
					user_id=#{userId},
				</if>
				<if test="agencyName != null">
					agency_name=#{agencyName},
				</if>
				<if test="inviteUserId != null">
					invite_user_id=#{inviteUserId},
				</if>
				<if test="name != null">
					name=#{name},
				</if>
				<if test="mobile != null">
					mobile=#{mobile},
				</if>
				<if test="productId != null">
					product_id=#{productId},
				</if>
				<if test="productName != null">
					product_name=#{productName},
				</if>
				<if test="brokerage != null">
					brokerage=#{brokerage},
				</if>
				<if test="status != null">
					status=#{status},
				</if>
				<if test="type != null">
					type=#{type},
				</if>
				update_time=sysdate(),
			</trim>
		</set>
		<where>
			id=#{id}
		</where>
	</update>

	<update id="updateBankTime" parameterType="Agency">
		update tb_agency
		set update_time=sysdate()
		where id=#{id} and user_id =#{userId} and product_id = #{productId}
	</update>




	<!-- 查询sql -->
	<select id="selectAgencys" parameterType="Agency" resultMap="agencyMap">
		select
		* from
		tb_agency
		<where>
		
			<trim suffixOverrides="and">
				<if test="id != null">
					id=#{id} and
				</if>
				<if test="inviteUserId != null">
					invite_user_id= #{inviteUserId} and
				</if>
				<if test="userId != null">
					user_id= #{userId} and
				</if>
				<if test="agencyName != null">
					agency_name= #{agencyName} and
				</if>
				<if test="name != null">
					name like CONCAT(CONCAT('%', #{name}),'%') and
				</if>
				<if test="mobile != null">
					mobile like CONCAT(CONCAT('%', #{mobile}),'%') and
				</if>
				<if test="inviteTime != null">
					invite_time= #{inviteTime} and
				</if>
				<if test="brokerage != null">
					brokerage= #{brokerage} and
				</if>
				<if test="productId != null">
					product_id= #{productId}  and
				</if>
				<if test="productName != null">
					product_name= #{productName} and
				</if>
				<if test="status != null">
					status= #{status} and
				</if>
				<if test="type != null">
					type= #{type}
				</if>
			</trim>
		</where>
		order by invite_time desc
	</select>


	<select id="selectAgencysByInviteUserId" parameterType="java.lang.Long" resultType="java.lang.Integer">
		select count(user_id)
		from tb_agency
		where
		invite_user_id = #{inviteUserId} and status = 1
	</select>





	<insert id="insertAgency" parameterType="Agency">
		insert into
		tb_agency(id,user_id,invite_user_id,name,mobile,agency_name,brokerage,product_id,product_name,status,type,invite_time,create_time,update_time)
		values
		(#{id},#{userId}, #{inviteUserId}, #{name},#{mobile}, #{agencyName},#{brokerage},#{productId},#{productName},
		#{status},#{type},sysdate(), sysdate(),sysdate())
		<selectKey resultType="java.lang.Long" order="AFTER"
				   keyProperty="userId">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>



</mapper>