<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="agency">

	<resultMap id="agencyMap" type="Agency">
		<result property="userId" column="user_id" jdbcType="NUMERIC" />
		<result property="agencyName" column="agency_name" jdbcType="VARCHAR" />
		<result property="inviteUserId" column="invite_user_id" jdbcType="NUMERIC" />
		<result property="name" column="name" jdbcType="VARCHAR" />
		<result property="productId" column="product_id" jdbcType="NUMERIC" />
		<result property="productName" column="product_name" jdbcType="NUMERIC" />
		<result property="brokerage" column="brokerage" jdbcType="NUMERIC" />
		<result property="status" column="status" jdbcType="NUMERIC" />
		<result property="inviteTime" column="invite_time" jdbcType="TIMESTAMP" />
		<result property="createTime" column="create_time" jdbcType="TIMESTAMP" />
		<result property="updateTime" column="update_time" jdbcType="TIMESTAMP" />

	</resultMap>

<!--查询直推总佣金-->
	<select id="getAgencyBrokerage" parameterType="java.lang.Long" resultType="java.math.BigDecimal">
		select
		sum(brokerage) as brokerage from
		tb_agency
		where
			invite_user_id =#{inviteUserId}

	</select>

	<!-- 佣金 -->
	<select id="selectAgencyByIds" parameterType="List" resultType="java.math.BigDecimal">
		select
		sum(brokerage) as brokerage from
		tb_agency
		<where>
			invite_user_id in
			<foreach item="inviteUserId" collection="list" open="(" separator=","
					 close=")">
				#{inviteUserId}
			</foreach>
		</where>
		group by invite_user_id
	</select>

	<select id="getSumBrokerage" parameterType="List" resultType="java.math.BigDecimal">
		select
		sum(brokerage) from
		tb_agency
		<where>
			user_id in
			<foreach item="userId" collection="list" open="(" separator=","
					 close=")">
				#{userId}
			</foreach>
			and status = 1
		</where>

	</select>

	<select id="selectAgencyById"  resultMap="agencyMap">
		select
		* from
		tb_agency
		<where>
			user_id=#{userId}
		</where>
	</select>

	<update id="updateAgency" parameterType="Agency">
		update tb_agency
		<set>
			<trim suffixOverrides=",">
				<if test="userId != null">
					user_id=#{userId},
				</if>
				<if test="agencyName != null">
					agency_name=#{agencyName},
				</if>
				<if test="inviteUserId != null">
					invite_user_id=#{inviteUserId},
				</if>
				<if test="name != null">
					name=#{name},
				</if>
				<if test="productId != null">
					product_id=#{productId},
				</if>
				<if test="productName != null">
					product_name=#{productName},
				</if>
				<if test="brokerage != null">
					brokerage=#{brokerage},
				</if>
				<if test="status != null">
					status=#{status},
				</if>
				update_time=sysdate(),
			</trim>
		</set>
		<where>
			user_id=#{userId}
		</where>
	</update>

	<!-- 查询sql -->
	<select id="selectAgencys" parameterType="Agency" resultMap="agencyMap">
		select
		* from
		tb_agency
		<where>
			<trim suffixOverrides="and">
				<if test="inviteUserId != null">
					invite_user_id= #{inviteUserId} and
				</if>
				<if test="userId != null">
					user_id= #{userId} and
				</if>
				<if test="agencyName != null">
					agency_name= #{agencyName} and
				</if>
				<if test="name != null">
					name= #{name} and
				</if>
				<if test="inviteTime != null">
					invite_time= #{inviteTime} and
				</if>
				<if test="brokerage != null"> and
					brokerage= #{brokerage}
				</if>
				<if test="productId != null"> and
					product_id= #{productId}
				</if>
				<if test="productName != null"> and
					product_name= #{productName}
				</if>
				<if test="status != null"> and
					status= #{status}
				</if>
			</trim>
		</where>
		order by invite_time desc
	</select>

	<insert id="insertAgency" parameterType="Agency">
		insert into
		tb_agency(user_id,invite_user_id,name,agency_name,brokerage,product_id,product_name,status,invite_time,create_time)
		values
		(#{userId}, #{inviteUserId}, #{name}, #{agencyName},#{brokerage},#{productId},#{productName},
		#{status},sysdate(), sysdate())
		<selectKey resultType="java.lang.Long" order="AFTER"
				   keyProperty="userId">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>


</mapper>