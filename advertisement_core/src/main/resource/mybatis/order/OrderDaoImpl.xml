<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="order">

	<resultMap id="orderMap" type="Order">
		<id property="orderId" column="order_id" jdbcType="NUMERIC" />
		<result property="projectId" column="project_id" jdbcType="NUMERIC" />
		<result property="userId" column="user_id" jdbcType="VARCHAR" />
		<result property="informationId" column="information_id" jdbcType="VARCHAR" />
		<result property="merchantId" column="merchant_id" jdbcType="NUMERIC" />
		<result property="productId" column="product_id" jdbcType="NUMERIC" />
		<result property="orderSource" column="order_source" jdbcType="VARCHAR" />
		<result property="description" column="description" jdbcType="VARCHAR" />
		<result property="status" column="status" jdbcType="NUMERIC" />
		<result property="createTime" column="create_time" jdbcType="TIMESTAMP" />
		<result property="updateTime" column="update_time" jdbcType="TIMESTAMP" />
	</resultMap>
	
	<sql id="Base_Column_List" >
    	o.order_id, o.project_id, o.user_id, o.information_id, o.merchant_id, o.product_id, o.order_source, o.description, o.status, o.create_time, o.update_time
  	</sql>

	<!-- 查询sql -->
	<select id="selectOrders" parameterType="Order" resultMap="orderMap">
		select
		* from
		tb_order
		<where>
			<trim suffixOverrides="and">
				<if test="orderId != null">
					order_id= #{orderId} and
				</if>
				<if test="projectId != null">
					project_id= #{projectId} and
				</if>
				<if test="userId != null">
					user_id= #{userId} and
				</if>
				<if test="informationId != null">
					information_id= #{informationId} and
				</if>
				<if test="merchantId != null">
					merchant_id= #{merchantId} and
				</if>
				<if test="productId != null">
					product_id= #{productId} and
				</if>
				<if test="orderSource != null">
					order_source= #{orderSource} and
				</if>
				<if test="description != null">
					description= #{description} and
				</if>
				<if test="status != null">
					status= #{status} and
				</if>
			</trim>
			and status != -1
		</where>
		order by create_time desc
	</select>
	
	<select id="selectSearchOrders" parameterType="Order" resultMap="orderMap">
		select
		<include refid="Base_Column_List" />
		from tb_order o 
			left join tb_information i 
				on o.information_id = i.information_id
			left join tb_information_insurance ii
				on o.information_id = ii.information_id
		<where>
			<trim suffixOverrides="and">
				<if test="orderId != null">
					o.order_id= #{orderId} and
				</if>
				<if test="projectId != null">
					o.project_id= #{projectId} and
				</if>
				<if test="userId != null">
					o.user_id= #{userId} and
				</if>
				<if test="informationId != null">
					o.information_id= #{informationId} and
				</if>
				<if test="merchantId != null">
					o.merchant_id= #{merchantId} and
				</if>
				<if test="productId != null">
					o.product_id= #{productId} and
				</if>
				<if test="orderSource != null">
					o.order_source= #{orderSource} and
				</if>
				<if test="description != null">
					o.description= #{description} and
				</if>
				<if test="status != null">
					o.status= #{status} and
				</if>
				<if test="createTimeStart != null">
					o.create_time &gt; #{createTimeStart} and 
				</if>
				<if test="createTimeEnd != null">
					o.create_time &lt; #{createTimeEnd} and
				</if>
				<if test="gender != null">
					(i.gender = #{gender} or (substring(i.identity_card, 17, 1)%2) = (#{gender}%2)) and
				</if>
				<if test="city != null and cityName == null">
					(i.city = #{city} or i.province = #{city}) and
				</if>
				<if test="cityName != null">
					i.location like CONCAT(CONCAT('%', #{cityName}),'%') and
				</if>
				<if test="insuranceConsumption != null">
					ii.has_insurance = #{insuranceConsumption} and
				</if>
				<if test="acceptablePreium != null">
					ii.acceptablePreium = #{acceptablePreium} and
				</if>
				<if test="maxAge != null">
					((TIMESTAMPDIFF(YEAR,DATE_FORMAT(i.birthday,'%Y-%m-%d'),NOW()) &lt;= #{maxAge}) or (TIMESTAMPDIFF(YEAR,DATE_FORMAT(substring(i.identity_card,7,4),'%Y-%m-%d'),NOW())) &lt;= #{maxAge}) and
				</if>
				<if test="minAge != null">
					((TIMESTAMPDIFF(YEAR,DATE_FORMAT(i.birthday,'%Y-%m-%d'),NOW()) &gt;= #{minAge}) or (TIMESTAMPDIFF(YEAR,DATE_FORMAT(substring(i.identity_card,7,4),'%Y-%m-%d'),NOW())) &gt;= #{minAge}) and
				</if>
				<if test="searchContent != null">
					(i.name like CONCAT(CONCAT('%', #{searchContent}),'%') or i.mobile like CONCAT(CONCAT('%', #{searchContent}),'%')) and
				</if>
				<if test="orderSearch!=null and orderSearch.count > 0">
					o.information_id IN (
						SELECT
							e.information_id
						FROM
							tb_extend_info e
						WHERE
							(
								<trim suffixOverrides="OR">
									<if test="orderSearch.communicateWay != null">
										e.tags_id = #{orderSearch.communicateWay} OR
									</if>
									<if test="orderSearch.interestInsurance != null">
										e.tags_id = #{orderSearch.interestInsurance} OR
									</if>
									<if test="orderSearch.insuredPerson != null">
										e.tags_id = #{orderSearch.insuredPerson} OR
									</if>
								</trim>
							)
						GROUP BY
							information_id
						HAVING
							COUNT(e.information_id) >= #{orderSearch.count}
					) and
				</if>
			</trim>
			and o.status != -1
		</where>
		order by status asc, create_time desc
	</select>
	
	<select id="selectOrderByIds" parameterType="List" resultMap="orderMap">
		select
		* from
		tb_order
		<where>
			order_id in
			<foreach item="id" collection="list" open="(" separator=","
				close=")">
				#{id}
			</foreach>
		</where>
	</select>

	<insert id="insertOrder" parameterType="Order">
		insert into
		tb_order(project_id, user_id, information_id, merchant_id, product_id,
		order_source, description, status,
		create_time, update_time )
		values
		(#{projectId}, #{userId}, #{informationId},
		#{merchantId}, #{productId}, #{orderSource}, #{description},
		#{status}, sysdate(), sysdate()
		)
		<selectKey resultType="java.lang.Long" order="AFTER"
			keyProperty="orderId">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>

	<update id="updateOrder" parameterType="Order">
		update tb_order
		<set>
			<trim suffixOverrides=",">
				<if test="projectId != null">
					project_id= #{projectId},
				</if>
				<if test="userId != null">
					user_id= #{userId},
				</if>
				<if test="informationId != null">
					information_id= #{informationId},
				</if>
				<if test="merchantId != null">
					merchant_id= #{merchantId},
				</if>
				<if test="productId != null">
					product_id= #{productId},
				</if>
				<if test="orderSource != null">
					order_source= #{orderSource},
				</if>
				<if test="description != null">
					description= #{description},
				</if>
				<if test="status != null">
					status= #{status},
				</if>
				update_time=sysdate(),
			</trim>
		</set>
		<where>
			order_id=#{orderId}
		</where>
	</update>

	<delete id="deleteOrder" parameterType="long">
		delete from tb_order
		where
		order_id=#{orderId}
	</delete>

</mapper>