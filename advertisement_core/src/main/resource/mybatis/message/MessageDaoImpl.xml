<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="message">

	<resultMap id="messageMap" type="Message">
		<id property="messageId" column="message_id" jdbcType="NUMERIC" />
		<result property="userId" column="user_id" jdbcType="VARCHAR" />
		<result property="projectId" column="project_id" jdbcType="NUMERIC" />
		<result property="receiver" column="receiver" jdbcType="NUMERIC" />
		<result property="relativeId" column="relative_id" jdbcType="NUMERIC" />
		<result property="name" column="name" jdbcType="VARCHAR" />
		<result property="title" column="title" jdbcType="VARCHAR" />
		<result property="description" column="description" jdbcType="VARCHAR" />
		<result property="content" column="content" jdbcType="VARCHAR" />
		<result property="tagsId" column="tags_id" jdbcType="NUMERIC" />
		<result property="type" column="type" jdbcType="NUMERIC" />
		<result property="status" column="status" jdbcType="NUMERIC" />
		<result property="createTime" column="create_time" jdbcType="TIMESTAMP" />
		<result property="updateTime" column="update_time" jdbcType="TIMESTAMP" />
	</resultMap>

	<!-- 查询sql -->
	<select id="selectMessages" parameterType="Message" resultMap="messageMap">
		select
		* from
		tb_message
		<where>
			<trim suffixOverrides="and">
				<if test="messageId != null">
					message_id= #{messageId} and
				</if>
				<if test="userId != null">
					user_id= #{userId} and
				</if>
				<if test="projectId != null">
					project_id= #{projectId} and
				</if>
				<if test="receiver != null">
					receiver= #{receiver} and
				</if>
				<if test="relativeId != null">
					relative_id= #{relativeId} and
				</if>
				<if test="name != null">
					name= #{name} and
				</if>
				<if test="title != null">
					title= #{title} and
				</if>
				<if test="description != null">
					description= #{description} and
				</if>
				<if test="content != null">
					content= #{content} and
				</if>
				<if test="tagsId != null">
					tags_id= #{tagsId} and
				</if>
				<if test="type != null">
					<if test="type == 2">
						(type= 2 or type=4) and
					</if>
					<if test="type != 2">
						type= #{type} and
					</if>
				</if>
				<if test="status != null">
					status= #{status} and
				</if>
			</trim>
			and status != -1
		</where>
		order by create_time desc
	</select>
	
	<select id="selectCount" parameterType="Message" resultType="Integer">
		select
		count(*) from
		tb_message
		<where>
			<trim suffixOverrides="and">
				<if test="messageId != null">
					message_id= #{messageId} and
				</if>
				<if test="userId != null">
					user_id= #{userId} and
				</if>
				<if test="projectId != null">
					project_id= #{projectId} and
				</if>
				<if test="receiver != null">
					receiver= #{receiver} and
				</if>
				<if test="relativeId != null">
					relative_id= #{relativeId} and
				</if>
				<if test="name != null">
					name= #{name} and
				</if>
				<if test="title != null">
					title= #{title} and
				</if>
				<if test="description != null">
					description= #{description} and
				</if>
				<if test="content != null">
					content= #{content} and
				</if>
				<if test="tagsId != null">
					tags_id= #{tagsId} and
				</if>
				<if test="type != null">
					type= #{type} and
				</if>
				<if test="status != null">
					status= #{status} and
				</if>
			</trim>
			and status != -1
		</where>
	</select>

	<select id="selectMessageByIds" parameterType="List" resultMap="messageMap">
		select
		* from
		tb_message
		<where>
			message_id in
			<foreach item="id" collection="list" open="(" separator=","
				close=")">
				#{id}
			</foreach>
		</where>
	</select>

	<insert id="insertMessage" parameterType="Message">
		insert into
		tb_message( user_id, project_id, receiver, relative_id,
		name, title, description, content, tags_id, type, status, create_time,
		update_time )
		values
		( #{userId}, #{projectId}, #{receiver},
		#{relativeId}, #{name}, #{title}, #{description}, #{content},
		#{tagsId}, #{type}, #{status}, sysdate(), sysdate() )
		<selectKey resultType="java.lang.Long" order="AFTER"
			keyProperty="messageId">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>

	<update id="updateMessage" parameterType="Message">
		update tb_message
		<set>
			<trim suffixOverrides=",">
				<if test="userId != null">
					user_id= #{userId},
				</if>
				<if test="projectId != null">
					project_id= #{projectId},
				</if>
				<if test="receiver != null">
					receiver= #{receiver},
				</if>
				<if test="relativeId != null">
					relative_id= #{relativeId},
				</if>
				<if test="name != null">
					name= #{name},
				</if>
				<if test="title != null">
					title= #{title},
				</if>
				<if test="description != null">
					description= #{description},
				</if>
				<if test="content != null">
					content= #{content},
				</if>
				<if test="tagsId != null">
					tags_id= #{tagsId},
				</if>
				<if test="type != null">
					type= #{type},
				</if>
				<if test="status != null">
					status= #{status},
				</if>
				update_time=sysdate(),
			</trim>
		</set>
		<where>
			message_id=#{messageId}
		</where>
	</update>

	<update id="deleteMessageByIds" parameterType="List">
		update tb_message
		<set>
			<trim suffixOverrides=",">
				status = -1,
				update_time=sysdate(),
			</trim>
		</set>
		<where>
			message_id in
			<foreach item="id" collection="list" open="(" separator=","
				close=")">
				#{id}
			</foreach>
		</where>
	</update>
	
	<update id="markForRead" parameterType="Message">
		update tb_message
		<set>
			<trim suffixOverrides=",">
				status = 2,
				update_time=sysdate(),
			</trim>
		</set>
		<where>
			<trim suffixOverrides="and">
				<if test="type != null">
					type= #{type} and
				</if>
				<choose>
					<when test="messageId != null">
						message_id= #{messageId}
					</when>
					<otherwise>
						user_id= #{userId} and project_id= #{projectId}
	                </otherwise>
				</choose>
				and status != -1
			</trim>
		</where>
	</update>

	<delete id="deleteMessage" parameterType="long">
		delete from tb_message
		where
		message_id=#{messageId}
	</delete>

</mapper>