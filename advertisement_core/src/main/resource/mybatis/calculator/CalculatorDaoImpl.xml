<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="calculator">

	<resultMap id="calculatorMap" type="Calculator">
		<id property="calculatorId" column="calculator_id" jdbcType="NUMERIC" />
		<result property="key" column="key" jdbcType="VARCHAR" />
		<result property="name" column="name" jdbcType="VARCHAR" />
		<result property="json" column="json" jdbcType="VARCHAR" />
		<result property="className" column="class_name" jdbcType="VARCHAR" />
		<result property="insuredSum" column="insured_sum" jdbcType="VARCHAR" />
		<result property="insuredDuration" column="insured_duration"
			jdbcType="VARCHAR" />
		<result property="paymentDuration" column="payment_duration"
			jdbcType="VARCHAR" />
		<result property="status" column="status" jdbcType="NUMERIC" />
		<result property="createTime" column="create_time" jdbcType="TIMESTAMP" />
		<result property="updateTime" column="update_time" jdbcType="TIMESTAMP" />
	</resultMap>

	<!-- 简历sql -->
	<select id="selectCalculator" parameterType="Calculator"
		resultMap="calculatorMap">
		select
		* from
		tb_calculator t
		<where>
			<trim suffixOverrides="and">
				<if test="calculatorId != null">
					calculator_id=#{calculatorId} and
				</if>
				<if test="name != null">
					name like CONCAT(CONCAT('%', #{name}),'%') and
				</if>
				<if test="key != null">
					`key` = #{key} and
				</if>
				<if test="key != null">
					`key` = #{key} and
				</if>
				<if test="insuredSum != null">
					insured_sum = #{insuredSum} and
				</if>
				<if test="insuredDuration != null">
					insured_duration = #{insuredDuration} and
				</if>
				<if test="paymentDuration != null">
					payment_duration = #{paymentDuration} and
				</if>
				<if test="status != null">
					status = #{status} and
				</if>
			</trim>
			and status != -1
		</where>
		order by create_time desc
	</select>

	<select id="selectCalculatorByIds" parameterType="List"
		resultMap="calculatorMap">
		select
		* from
		tb_calculator t
		<where>
			calculator_id in
			<foreach item="id" collection="list" open="(" separator=","
				close=")">
				#{id}
			</foreach>
		</where>
	</select>

	<insert id="insertCalculator" parameterType="Calculator">
		insert into
		tb_calculator(`key`, name, json, class_name, insured_sum,
		insured_duration, payment_duration,
		status, create_time, update_time)
		values
		(#{key},
		#{name}, #{json}, #{className}, #{insuredSum},
		#{insuredDuration},#{paymentDuration}
		#{status}, sysdate(), sysdate())
		<selectKey resultType="java.lang.Long" order="AFTER"
			keyProperty="calculatorId">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>

	<update id="updateCalculator" parameterType="Calculator">
		update tb_calculator
		<set>
			<trim suffixOverrides=",">
				<if test="key != null">
					`key`=#{key},
				</if>
				<if test="name != null">
					name=#{name},
				</if>
				<if test="json != null">
					json=#{json},
				</if>
				<if test="className != null">
					class_name=#{className},
				</if>
				<if test="insuredDuration != null">
					insured_duration=#{insuredDuration},
				</if>
				<if test="paymentDuration != null">
					payment_duration=#{paymentDuration},
				</if>
				<if test="insuredSum != null">
					insured_sum=#{insuredSum},
				</if>
				<if test="status != null">
					status=#{status},
				</if>
				update_time=sysdate(),
			</trim>
		</set>
		<where>
			calculator_id=#{calculatorId}
		</where>
	</update>

	<delete id="deleteCalculator" parameterType="long">
		delete from
		tb_calculator
		where
		calculator_id=#{calculatorId}
	</delete>

</mapper>