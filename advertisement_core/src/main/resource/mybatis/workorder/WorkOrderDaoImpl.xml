<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="workOrder">

	<resultMap id="workOrderMap" type="WorkOrder">
		<id property="workOrderId" column="work_order_id" jdbcType="NUMERIC" />
		<result property="projectId" column="project_id" jdbcType="NUMERIC" />
		<result property="informationTaskId" column="information_task_id" jdbcType="NUMERIC" />
		<result property="informationId" column="information_id" jdbcType="NUMERIC" />
		<result property="staffId" column="staff_id" jdbcType="NUMERIC" />
		<result property="propertySituation" column="property_situation" jdbcType="NUMERIC" />
		<result property="annualIncome" column="annual_income" jdbcType="NUMERIC" />
		<result property="familyMember" column="family_member" jdbcType="NUMERIC" />
		<result property="badHabit" column="bad_habit" jdbcType="NUMERIC" />
		<result property="occupation" column="occupation" jdbcType="NUMERIC" />
		<result property="score" column="score" jdbcType="NUMERIC" />
		<result property="stage" column="stage" jdbcType="NUMERIC" />
		<result property="callTimes" column="call_times" jdbcType="TIMESTAMP" />
		<result property="callBackTime" column="call_back_time" jdbcType="TIMESTAMP" />
		<result property="status" column="status" jdbcType="NUMERIC" />
		<result property="createTime" column="create_time" jdbcType="TIMESTAMP" />
		<result property="updateTime" column="update_time" jdbcType="TIMESTAMP" />
	</resultMap>

	<select id="selectWorkOrder" parameterType="WorkOrder"
		resultMap="workOrderMap">
		select
		* from
		tb_work_order
		<where>
			<trim suffixOverrides="and">
				<if test="workOrderId != null">
					work_order_id=#{workOrderId} and
				</if>
				<if test="projectId != null">
					project_id=#{projectId} and
				</if>
				<if test="informationTaskId != null">
					information_task_id=#{informationTaskId} and
				</if>
				<if test="informationId != null">
					information_id=#{informationId} and
				</if>
				<if test="staffId != null">
					staff_id=#{staffId} and
				</if>
				<if test="stage != null">
					stage=#{stage} and
				</if>
				<if test="status != null">
					status=#{status} and
				</if>
			</trim>
		</where>
		order by create_time desc
	</select>
	
	<select id="selectWorkOrderTaskIds" parameterType="WorkOrderDto"
		resultType="Long">
		select
		distinct(information_task_id) from
		tb_work_order
		<where>
			<trim suffixOverrides="and">
				<if test="workOrderId != null">
					work_order_id=#{workOrderId} and
				</if>
				<if test="projectId != null">
					project_id=#{projectId} and
				</if>
				<if test="informationTaskId != null">
					information_task_id=#{informationTaskId} and
				</if>
				<if test="informationId != null">
					information_id=#{informationId} and
				</if>
				<if test="staffId != null">
					staff_id=#{staffId} and
				</if>
				<if test="stage != null">
					stage=#{stage} and
				</if>
				<if test="status != null">
					status=#{status} and
				</if>
				<if test="startCreateTime != null">
					create_time &gt; #{startCreateTime} and
				</if>
				<if test="endCreateTime != null">
					create_time &lt; #{endCreateTime} and
				</if>
			</trim>
		</where>
		order by create_time desc
	</select>
	
	<sql id="Work_Order_Query_Condition" >
    	w.information_id = i.information_id and
		<if test="workOrderId != null">
			w.work_order_id=#{workOrderId} and
		</if>
		<if test="projectId != null">
			w.project_id=#{projectId} and
		</if>
		<if test="informationTaskId != null">
			w.information_task_id=#{informationTaskId} and
		</if>
		<if test="informationId != null">
			w.information_id=#{informationId} and
		</if>
		<if test="staffId != null">
			w.staff_id=#{staffId} and
		</if>
		<if test="staffIdList != null">
			w.staff_id in
			<foreach item="sid" collection="staffIdList" open="("
				separator="," close=")">
				#{sid}
			</foreach> and
		</if>
		<if test="stage != null">
			w.stage=#{stage} and
		</if>
		<if test="status != null">
			w.status=#{status} and
		</if>
		<if test="startCreateTime != null">
			w.create_time &gt; #{startCreateTime} and
		</if>
		<if test="endCreateTime != null">
			w.create_time &lt; #{endCreateTime} and
		</if>
		<if test="name != null">
			i.name like CONCAT(CONCAT('%', #{name}),'%') and
		</if>
		<if test="gender != null">
			i.gender=#{gender} and
		</if>
		<if test="startBirthday != null">
			i.birthday &gt; #{startBirthday} and
		</if>
		<if test="endBirthday != null">
			i.birthday &lt; #{endBirthday} and
		</if>
		<if test="startCallTimes != null">
			w.call_times &gt; #{startCallTimes} and
		</if>
		<if test="endCallTimes != null">
			w.call_times &lt; #{endCallTimes} and
		</if>
		<if test="startCallBackTime != null">
			w.call_back_time &gt; #{startCallBackTime} and
		</if>
		<if test="endCallBackTime != null">
			w.call_back_time &lt; #{endCallBackTime} and
		</if>
  	</sql>
  	
	<select id="selectWorkOrderByRank" parameterType="WorkOrderDto"
		resultMap="workOrderMap">
		select * from (
		select
		w.* from
		tb_work_order w, tb_information i
		<where>
			<trim suffixOverrides="and">
				<include refid="Work_Order_Query_Condition" />
				w.call_back_time &lt; #{recentCallBackTime} and w.call_back_time &gt; NOW() and
			</trim>
		</where>
		order by w.call_back_time desc, w.status asc, w.create_time desc) t1
		union
		select * from (
		select
		w.* from
		tb_work_order w, tb_information i
		<where>
			<trim suffixOverrides="and">
				<include refid="Work_Order_Query_Condition" />
				(w.call_back_time is null or w.call_back_time &gt; #{recentCallBackTime} or w.call_back_time &lt; NOW() ) and
			</trim>
		</where>
		order by w.status asc, w.create_time desc) t2
	</select>
	
	<select id="selectWorkOrderByIds" parameterType="List" resultMap="workOrderMap">
		select
		* from
		tb_work_order
		<where>
			work_order_id in
			<foreach item="id" collection="list" open="(" separator=","
				close=")">
				#{id}
			</foreach>
		</where>
	</select>

	<insert id="insertWorkOrder" parameterType="WorkOrder">
		insert into
		tb_work_order(project_id, information_task_id, information_id, staff_id, property_situation,
		annual_income, family_member, bad_habit, occupation, score, call_back_time, call_times,
		stage, status,
		create_time,
		update_time)
		values
		(#{projectId}, #{informationTaskId}, #{informationId}, #{staffId},
		#{propertySituation}, #{annualIncome}, #{familyMember}, #{badHabit},
		#{occupation}, #{score}, #{callBackTime}, #{callTimes},
		#{stage}, #{status},
		sysdate(),
		sysdate())
		<selectKey resultType="java.lang.Long" order="AFTER"
			keyProperty="workOrderId">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>

	<update id="updateWorkOrder" parameterType="WorkOrder">
		update tb_work_order
		<set>
			<trim suffixOverrides=",">
				<if test="projectId != null">
					project_id=#{projectId},
				</if>
				<if test="informationTaskId != null">
					information_task_id=#{informationTaskId},
				</if>
				<if test="informationId != null">
					information_id=#{informationId},
				</if>
				<if test="staffId != null">
					staff_id=#{staffId},
				</if>
				<if test="propertySituation != null">
					property_situation= #{propertySituation},
				</if>
				<if test="annualIncome != null">
					annual_income= #{annualIncome},
				</if>
				<if test="familyMember != null">
					family_member= #{familyMember},
				</if>
				<if test="badHabit != null">
					bad_habit= #{badHabit},
				</if>
				<if test="occupation != null">
					occupation= #{occupation},
				</if>
				<if test="score != null">
					score= #{score},
				</if>
				<if test="stage != null">
					stage=#{stage},
				</if>
				<if test="callBackTime != null">
					call_back_time=#{callBackTime},
				</if>
				<if test="callTimes != null">
					call_times=#{callTimes},
				</if>
				<if test="status != null">
					status=#{status},
				</if>
				update_time=sysdate(),
			</trim>
		</set>
		<where>
			work_order_id=#{workOrderId}
		</where>
	</update>

	<delete id="deleteWorkOrder" parameterType="WorkOrder">
		delete from tb_work_order
		<where>
			work_order_id=#{workOrderId}
		</where>
	</delete>

</mapper>