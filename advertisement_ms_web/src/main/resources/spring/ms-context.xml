<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->
	<bean id="propertyConfigurer2"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="order" value="2" />
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="locations">
			<list>
				<value>classpath:config/${spring.profiles.active:unknown}/system.properties
				</value>
			</list>
		</property>
	</bean>

	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven>
		<mvc:message-converters>
			<bean
				class="com.yuanshanbao.ms.message.converter.UTF8StringHttpMessageConverter" />
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:interceptors>
		<bean class="com.yuanshanbao.ms.interceptor.MenuInterceptor" />
	</mvc:interceptors>


	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />
	<mvc:resources mapping="/ueditor/**" location="/ueditor/" />
	<mvc:resources mapping="/extjs/**" location="/extjs/" />
	<mvc:resources mapping="/app/**" location="/app/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"> 
		<property name="prefix" value="/WEB-INF/views/" /> <property name="suffix" 
		value=".jsp" /> <property name="attributes"> <props> <prop key="systemName">${system.name}</prop> 
		</props> </property> </bean> -->
	<context:component-scan base-package="com.yuanshanbao"
		use-default-filters="false">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>


	<!-- <bean id="iniBean" class="com.yuanshanbao.ad.core.IniBean" init-method="init"></bean> 
		<bean id="constantsBean" class="com.yuanshanbao.core.constants.ConstantsManager" 
		init-method="init"></bean> -->

	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<bean name="requestMappingHandlerMapping"
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
	</bean>
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean
					class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
			</list>
		</property>
	</bean>

	<bean
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="cache" value="true" />
		<property name="suffix" value=".ftl" />
		<property name="contentType" value="text/html;charset=utf-8" />
		<property name="exposeRequestAttributes" value="true" />
		<property name="exposeSessionAttributes" value="true" />
		<property name="exposeSpringMacroHelpers" value="true" />
		<property name="allowSessionOverride" value="true" />
		<property name="allowRequestOverride" value="true" />
		<property name="requestContextAttribute" value="rc"></property>
	</bean>

	<mvc:annotation-driven>    
    <mvc:message-converters register-defaults="true">    
        <!--json处理-->    
        <bean    
            class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">    
            <property name="supportedMediaTypes">    
                <list>    
                    <value>application/json;charset=UTF-8</value>    
                    <value>text/html;charset=UTF-8</value>    
                </list>    
            </property>    
        </bean>    
    </mvc:message-converters>    
   </mvc:annotation-driven>    

	<bean id="freemarkerConfig"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="/WEB-INF/ftl">
		</property>
		<property name="defaultEncoding" value="UTF-8"></property>
		<property name="freemarkerSettings">
			<props>
				<prop key="template_update_delay">10</prop>
				<prop key="locale">zh_CN</prop>
				<prop key="template_exception_handler">ignore</prop><!-- ignore,debug,html_debug,rethrow -->
			</props>
		</property>
	</bean>
	<context:component-scan base-package="com.yuanshanbao.ms" />
</beans>
